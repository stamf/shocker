#!/usr/bin/env sh
readonly btrfs_path='/var/shocker'
readonly dirname=$(dirname "$(readlink -f "$0")")

# source utility functions
#shellcheck disable=SC1090
. "$dirname"/utils.sh

usage () {
cat << USAGE
  Usage: shocker [options] <command>

  Commands:
    list           # list containers
    start          # start a container
    change         # modify a container
    stop           # stop a container
    remove         # remove a container
    image list     # list images
    image pull     # fetch a remote image
    image create   # create an image
    image change   # modify an image
    image remove   # remove an image

  Options:
    -h, --help     output usage information
    -v, --version  output version information

  Examples:
    $ shocker image pull -h              # output usage for the pull command
    $ shocker image pull alpine@latest   # fetch alpine linux from docker
    $ shocker image list                 # list local images
    $ shocker start img_1235 ash         # start an ash shell from an image
    $ shocker change img_1235 -n beep    # rename a container
    $ shocker change beep -m 500m        # change a container's memory limit
    $ shocker list                       # list containers
    $ shocker stop beep                  # stop a running container
    $ shocker remove beep                # remove a stopped container
    $ shocker image remove img_1235      # remove a local image
USAGE
}

verify_deps () {
  if [ "$(id -u)" -ne 0 ]; then
    printf "shocker(1) should be executed as sudo\n" >&2
    exit 1
  fi

  # check if btrfs is mounted and available
  if [ ! -d "$btrfs_path" ]; then
    printf 'Error: %s does not exist\n' "$btrfs_path" >&2
    exit 1
  fi

  sudo btrfs filesystem show "$btrfs_path" > /dev/null
  if [ "$?" -ne 0 ]; then
    printf 'Error: %s is not a btrfs filesystem\n' "$btrfs_path" >&2
    exit 1
  fi
}

shocker_image() {
  case "$1" in
    -h|--help ) usage && exit 0 ;;
    list|ls   ) shift && "$dirname/shocker-image-list" "$@" ;;
    pull      ) shift && "$dirname/shocker-image-pull" "$@" ;;
    create    ) shift && "$dirname/shocker-image-create" "$@" ;;
    change    ) shift && "$dirname/shocker-image-change" "$@" ;;
    remove|rm ) shift && "$dirname/shocker-image-remove" "$@" ;;
    *         ) usage && exit 1 ;;
  esac
}

# assure commands are passed
[ "$#" -ne 0 ] || { usage; exit 1; }

# flags
case "$1" in
  -h|--help ) usage && exit 0 ;;
esac

# verify command dependencies
verify_deps

# commands
case "$1" in
  image     ) shift && shocker_image "$@" ;;
  commit    ) shift && "$dirname/shocker-commit" "$@" ;;
  cleanup   ) shift && "$dirname/shocker-cleanup" "$@" ;;
  export    ) shift && "$dirname/shocker-export" "$@" ;;
  limit     ) shift && "$dirname/shocker-limit" "$@" ;;
  logs      ) shift && "$dirname/shocker-logs" "$@" ;;
  ps        ) shift && "$dirname/shocker-ps" "$@" ;;
  remove|rm ) shift && "$dirname/shocker-remove" "$@" ;;
  start     ) shift && "$dirname/shocker-start" "$@" ;;
  stop      ) shift && "$dirname/shocker-stop" "$@" ;;
  *         ) usage && exit 1 ;;
esac
